// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Rollup = require("rollup");
var FutureJs = require("@qwick/future/src/FutureJs.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var OutputGenerationError = Caml_exceptions.create("Rollup.OutputGenerationError");

var BundleGenerationError = Caml_exceptions.create("Rollup.BundleGenerationError");

function make(prim) {
  return {
          input: prim
        };
}

var InputOptions = /* module */[/* make */make];

function make$1(prim, prim$1) {
  return {
          format: prim,
          file: prim$1
        };
}

var OutputOptions = /* module */[/* make */make$1];

function make$2(prim, prim$1) {
  return {
          code: prim,
          isEntry: prim$1
        };
}

function isEntry(prim) {
  return prim.isEntry;
}

var Chunk = /* module */[
  /* make */make$2,
  /* isEntry */isEntry
];

var Output = /* module */[];

function generate(bundle, outputOptions) {
  return FutureJs.fromPromise(bundle.generate(outputOptions), (function (_err) {
                return OutputGenerationError;
              }));
}

var Bundle = /* module */[/* generate */generate];

function rollup(options) {
  return FutureJs.fromPromise(Rollup.rollup(options), (function (_err) {
                return BundleGenerationError;
              }));
}

exports.OutputGenerationError = OutputGenerationError;
exports.BundleGenerationError = BundleGenerationError;
exports.InputOptions = InputOptions;
exports.OutputOptions = OutputOptions;
exports.Chunk = Chunk;
exports.Output = Output;
exports.Bundle = Bundle;
exports.rollup = rollup;
/* rollup Not a pure module */
